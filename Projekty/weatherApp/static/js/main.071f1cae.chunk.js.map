{"version":3,"sources":["scripts/day.js","scripts/temperature.js","scripts/Wind.js","scripts/rain.js","scripts/box.js","App.js","reportWebVitals.js","index.js"],"names":["Day","state","day","date","Date","first","getDate","second","third","day1","setDate","toUTCString","day2","day3","slice","tempValue","tempName","this","props","lol","item","avgtemp_c","avgtemp_f","className","onClick","settingDay","src","condition","icon","React","Component","Temperature","bool","startHour","endHour","opac","side","setState","prevState","time","temperature","current","last_updated","leng","length","actualHour","Number","mappedli","forecast","forecastday","hour","map","valueOfTemp","summary","temp_c","temp_f","alt","button1","button2","changeDailyTime","Wind","wind","windValue","wind_kph","wind_mph","Rain","rain","chance_of_rain","snow","chance_of_snow","height","class","style","Box","today","generated","searchCity","classNightmode","Table","setDay","actualDay","actualWebsite","bind","param","something","String","getHours","index","date_epoch","prevProps","console","log","temp","Feelslike","per","tempToday","setTimeout","grabBody","document","querySelector","classList","contains","backgroundStyle","remove","add","grabBox","grabh1","grabInput","grabSearchButton","nightmode","color","backgroundColor","border","textShadow","feelslike_c","feelslike_f","cos","text","humidity","location","openSettings","city","App","fetchedData","generatedWebsite","alert","settings","render","nighmode","alertDiv","grabValue","value","grabField","focus","select","toLowerCase","fetch","then","res","json","Error","data","hasOwnProperty","catch","error","type","toggler","colorWind","colorWind2","colorTemp","colorTemp2","nightOff","nightOn","checked","showIcon","shortCutW","name","handleKeyPress","event","key","id","placeholder","onKeyPress","e","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.071f1cae.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../styles/day.css\"\r\n\r\n\r\n\r\nclass Day extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            day: \"\"\r\n        }\r\n    }\r\n   \r\n    \r\n\r\n    render() {\r\n        \r\n        \r\n        let date = new Date();\r\n        let first = date.getDate(); // first day\r\n        let second = first + 1;\r\n        let third = second + 1;\r\n    \r\n        let day1 = new Date(date.setDate(first)).toUTCString();\r\n        let day2 = new Date(date.setDate(second)).toUTCString();\r\n        let day3 = new Date(date.setDate(third)).toUTCString();\r\n    \r\n        day1 = day1.slice(0,3)\r\n        day2 = day2.slice(0,3)\r\n        day3 = day3.slice(0,3)\r\n\r\n    \r\n        \r\n        \r\n        let day = ''\r\n        let tempValue = '';\r\n        let tempName = '';\r\n\r\n        if(this.props.lol === 0) {\r\n            day = day1\r\n        } else if(this.props.lol === 1) {\r\n            day = day2\r\n        } else if (this.props.lol === 2) {\r\n            day = day3\r\n        }\r\n    \r\n    \r\n    \r\n        if(this.props.tempValue === \"celsjusz\") {\r\n            tempValue = '℃';\r\n            tempName = this.props.item.day.avgtemp_c\r\n        } else {\r\n            tempValue = '℉';\r\n            tempName = this.props.item.day.avgtemp_f\r\n        }\r\n      \r\n    \r\n        return (\r\n            <div className=\"dayWeather\">\r\n    \r\n                <div className=\"daye\" onClick={() => this.props.settingDay(this.props.lol)}>\r\n                    <div> {day} </div>\r\n                    <img src={this.props.item.day.condition.icon} />\r\n                    <div> {tempName} {tempValue}  </div>\r\n    \r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n   \r\n}\r\n\r\nexport default Day","import React from \"react\"\r\nimport \"../styles/temperature.css\"\r\n\r\nclass Temperature extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            bool: true,\r\n            startHour: '',\r\n            endHour: '',\r\n            opac: 0\r\n        }\r\n    }\r\n    \r\n   \r\n\r\n    changeDailyTime(side) {\r\n\r\n        if(side === 'prev') {\r\n            this.setState( prevState => {\r\n                return {\r\n                    startHour: prevState.startHour -8,\r\n                    endHour: prevState.endHour-8\r\n                }\r\n            })\r\n        }\r\n        else if (side === \"next\") {\r\n            this.setState(prevState => {\r\n                return {\r\n                    startHour: prevState.startHour +8,\r\n                    endHour: prevState.endHour +8\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let time = this.props.temperature.current.last_updated;\r\n        //console.log(\"ELOOOO\")\r\n        //console.log(time)\r\n        let leng = time.length\r\n        \r\n        let actualHour = time.slice(leng-5, leng-3)\r\n        actualHour = Number(actualHour)\r\n        //console.log(actualHour)\r\n        //console.log(typeof(actualHour))\r\n\r\n        if(actualHour < 8) {\r\n            this.setState({startHour: 0, endHour: 7})\r\n        } \r\n        \r\n        else if (actualHour > 7 && actualHour < 17) {\r\n            this.setState({startHour: 8, endHour: 16})\r\n        }\r\n\r\n        else if (actualHour > 16 && actualHour < 24) {\r\n            this.setState({startHour: 16, endHour: 23})\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n      \r\n        \r\n            let shorter = this.props.temperature.forecast.forecastday[this.props.day]\r\n            let kos = shorter.hour.slice(this.state.startHour, this.state.endHour)\r\n\r\n            \r\n            //console.log('kossed')\r\n            //console.log(kos)\r\n            //console.log(this.props.temperature)\r\n\r\n            let mappedli = kos.map(item => {\r\n                \r\n                let valueOfTemp = ''\r\n                let time = item.time\r\n                let leng = time.length;\r\n                let summary = time.slice(leng-5, leng);\r\n\r\n               \r\n\r\n                if(this.props.tempValue === \"celsjusz\") {\r\n                    valueOfTemp = item.temp_c + \"℃\"\r\n                } else {\r\n                    valueOfTemp = item.temp_f + \"℉\"\r\n                }\r\n\r\n                return (\r\n                    <ul>\r\n                        <li>{summary}</li>\r\n                        <li><img src={item.condition.icon} alt=\"\" /> </li>\r\n                        <li>{valueOfTemp}</li>\r\n                    </ul>\r\n                )\r\n                \r\n            })\r\n\r\n            let button1 = ''\r\n            let button2 = ''\r\n\r\n            if(this.state.startHour > 7) {\r\n                button1 = <li><button className=\"butsL\" onClick={ () => this.changeDailyTime('prev')}>{\"<\"}</button></li>\r\n            } \r\n            else {\r\n                button1 = '';\r\n            }\r\n\r\n\r\n\r\n            if (this.state.startHour < 16) {\r\n                button2 = <li><button className=\"butsR\" onClick={ () => this.changeDailyTime('next')}>{\">\"} </button></li>\r\n            } \r\n            else {\r\n                button2 = '';\r\n            }\r\n\r\n            return (\r\n                <ul className=\"listed\">\r\n                    {button1}\r\n                    {mappedli}\r\n                    {button2}\r\n                    \r\n                </ul>\r\n            )\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Temperature","import React from \"react\"\r\n\r\nclass Wind extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state ={ \r\n            bool: true,\r\n            startHour: '',\r\n            endHour: '',\r\n            opac: 0\r\n        }\r\n    }\r\n\r\n\r\n    changeDailyTime(side) {\r\n\r\n        if(side === 'prev') {\r\n            this.setState( prevState => {\r\n                return {\r\n                    startHour: prevState.startHour -8,\r\n                    endHour: prevState.endHour-8\r\n                }\r\n            })\r\n        }\r\n        else if (side === \"next\") {\r\n            this.setState(prevState => {\r\n                return {\r\n                    startHour: prevState.startHour +8,\r\n                    endHour: prevState.endHour +8\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let time = this.props.temperature.current.last_updated;\r\n        //console.log(\"ELOOOO\")\r\n        //console.log(time)\r\n        let leng = time.length\r\n        \r\n        let actualHour = time.slice(leng-5, leng-3)\r\n        actualHour = Number(actualHour)\r\n        //console.log(actualHour)\r\n        //console.log(typeof(actualHour))\r\n\r\n        if(actualHour < 8) {\r\n            this.setState({startHour: 0, endHour: 7})\r\n        } \r\n        \r\n        else if (actualHour > 7 && actualHour < 17) {\r\n            this.setState({startHour: 8, endHour: 16})\r\n        }\r\n\r\n        else if (actualHour > 16 && actualHour < 24) {\r\n            this.setState({startHour: 16, endHour: 23})\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        \r\n            let shorter = this.props.temperature.forecast.forecastday[this.props.day]\r\n            let kos = shorter.hour.slice(this.state.startHour, this.state.endHour)\r\n\r\n            \r\n            //console.log('kossed')\r\n            //console.log(kos)\r\n            //console.log(this.props.temperature)\r\n\r\n            let mappedli = kos.map(item => {\r\n                \r\n                let wind  = ''\r\n\r\n                let time = item.time\r\n                let leng = time.length;\r\n                let summary = time.slice(leng-5, leng);\r\n\r\n                \r\n\r\n                if(this.props.windValue === \"km\") {\r\n                    wind = item.wind_kph + \" km/h\"\r\n                } else {\r\n                    wind = item.wind_mph + \" mp/h\"\r\n                }\r\n\r\n                return (\r\n                    <ul>\r\n                        <li>{summary}</li>\r\n                        <li><img src={item.condition.icon} alt=\"\" /> </li>\r\n                        <li>{wind}</li>\r\n                    </ul>\r\n                )\r\n                \r\n            })\r\n\r\n            let button1 = ''\r\n            let button2 = ''\r\n\r\n            if(this.state.startHour > 7) {\r\n                button1 = <li><button className=\"butsL\" onClick={ () => this.changeDailyTime('prev')}>{\"<\"}</button></li>\r\n            } \r\n            else {\r\n                button1 = '';\r\n            }\r\n\r\n\r\n\r\n            if (this.state.startHour < 16) {\r\n                button2 = <li><button className=\"butsR\" onClick={ () => this.changeDailyTime('next')}>{\">\"} </button></li>\r\n            } \r\n            else {\r\n                button2 = '';\r\n            }\r\n\r\n            return (\r\n                <ul className=\"listed\">\r\n                    {button1}\r\n                    {mappedli}\r\n                    {button2}\r\n                    \r\n                </ul>\r\n            )\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Wind","import React from \"react\"\r\nimport \"../styles/temperature.css\"\r\n\r\nclass Rain extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    changeDailyTime(side) {\r\n\r\n        if(side === 'prev') {\r\n            this.setState( prevState => {\r\n                return {\r\n                    startHour: prevState.startHour -8,\r\n                    endHour: prevState.endHour-8\r\n                }\r\n            })\r\n        }\r\n        else if (side === \"next\") {\r\n            this.setState(prevState => {\r\n                return {\r\n                    startHour: prevState.startHour +8,\r\n                    endHour: prevState.endHour +8\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let time = this.props.temperature.current.last_updated;\r\n     \r\n        let leng = time.length\r\n        \r\n        let actualHour = time.slice(leng-5, leng-3)\r\n        actualHour = Number(actualHour)\r\n        \r\n\r\n        if(actualHour < 8) {\r\n            this.setState({startHour: 0, endHour: 7})\r\n        } \r\n        \r\n        else if (actualHour > 7 && actualHour < 17) {\r\n            this.setState({startHour: 8, endHour: 16})\r\n        }\r\n\r\n        else if (actualHour > 16 && actualHour < 24) {\r\n            this.setState({startHour: 16, endHour: 23})\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        \r\n            let shorter = this.props.temperature.forecast.forecastday[this.props.day]\r\n            let kos = shorter.hour.slice(this.state.startHour, this.state.endHour)\r\n\r\n           \r\n            \r\n            \r\n\r\n\r\n            let mappedli = kos.map(item => {\r\n                \r\n                let rain = item.chance_of_rain +\"%\";\r\n                let snow = item.chance_of_snow + \"%\";\r\n                let time = item.time\r\n                let leng = time.length;\r\n                let summary = time.slice(leng-5, leng);\r\n\r\n                let height = item.chance_of_rain+\"%\"\r\n\r\n                \r\n\r\n                \r\n                return (\r\n                    <ul>\r\n\r\n                        <li>{summary}</li>\r\n\r\n                        <div className=\"squares\">\r\n                            \r\n                        \r\n                            <li className=\"tool\">\r\n\r\n                                <span class=\"toolTipText\">Chance of Rain is {rain}</span>\r\n\r\n                                \r\n\r\n                                    <div className=\"alphaSquare\">\r\n                                        <div className=\"square squareR\" style={{height: height}}></div>\r\n                                    </div>\r\n\r\n                            \r\n\r\n                                {rain}\r\n                                \r\n                            </li>\r\n\r\n                            <li className=\"tool\">\r\n                            \r\n                                <span class=\"toolTipText\">Chance of Snow is {snow}</span>\r\n\r\n                                <div className=\"alphaSquare\">\r\n                                        <div className=\"square squareS\"></div>\r\n                                </div>\r\n\r\n                                {snow}\r\n                            </li>\r\n                            <li className=\"line\"></li>\r\n                        </div>\r\n\r\n                        \r\n\r\n                    </ul>\r\n                )\r\n                \r\n            })\r\n\r\n            let button1 = ''\r\n            let button2 = ''\r\n\r\n            if(this.state.startHour > 7) {\r\n                button1 = <li><button className=\"butsL\" onClick={ () => this.changeDailyTime('prev')}>{\"<\"}</button></li>\r\n            } \r\n            else {\r\n                button1 = '';\r\n            }\r\n\r\n\r\n\r\n            if (this.state.startHour < 16) {\r\n                button2 = <li><button className=\"butsR\" onClick={ () => this.changeDailyTime('next')}>{\">\"} </button></li>\r\n            } \r\n            else {\r\n                button2 = '';\r\n            }\r\n\r\n            return (\r\n                <ul className=\"listed\">\r\n                    {button1}\r\n                    {mappedli}\r\n                    {button2}\r\n                    \r\n                </ul>\r\n            )\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n}\r\n\r\n\r\nexport default Rain","import React from \"react\"\r\nimport \"../styles/box.css\"\r\nimport {AiOutlineSetting, AiOutlineReload} from \"react-icons/ai\"\r\nimport Day from \"./day\"\r\nimport Temperature from \"./temperature\"\r\nimport Wind from \"./Wind\"\r\nimport Rain from \"./rain\"\r\n\r\nclass Box extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            today: props.today,\r\n            tempValue: props.temperature,\r\n            windValue: props.windValue,\r\n            generated: '',\r\n            searchCity: props.searchCity,\r\n            classNightmode: false,\r\n            Table: [],\r\n            setDay: props.setDay,\r\n            actualHour: 0,\r\n            day: '',\r\n            actualDay: '',\r\n            actualWebsite: 'temperature'\r\n        }\r\n        this.settingDay = this.settingDay.bind(this)\r\n    }\r\n\r\n    settingDay(param) {\r\n       \r\n        let date = new Date();\r\n        let first = date.getDate(); \r\n    \r\n        let day1 = new Date(date.setDate(first)).toUTCString();\r\n\r\n    \r\n        day1 = day1.slice(0,3)\r\n        // output example: Sun (sunday)\r\n        if (param) {\r\n            //getting dat || convert to string || slice a bit to give to state and display\r\n            let something = new Date(date.setDate(first +param)).toUTCString();\r\n            let second = String(something)\r\n            second = second.slice(0,3)\r\n           \r\n            this.setState({\r\n                actualDay: second,\r\n                setDay: param\r\n            })\r\n        }\r\n        else {\r\n            \r\n            this.setState({\r\n                actualDay: day1,\r\n                setDay: param\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.setDay === 0) {\r\n            let date = new Date();\r\n            let first = date.getHours(); // first day\r\n            this.setState({actualHour: first})\r\n        } else if(this.state.setDay) {\r\n            this.setState({actualHour: 14 })\r\n        }\r\n        \r\n        this.setState( () => {\r\n\r\n            return {\r\n                generated: <Temperature temperature={this.state.today} day={0} tempValue={this.props.temperature}/>,\r\n\r\n                day: this.props.today.forecast.forecastday.map( (item, index) => <Day item={item} tempValue={this.props.temperature} key={item.date_epoch} lol={index} settingDay={this.settingDay}  /> )\r\n                }\r\n\r\n        })\r\n        \r\n    }\r\n\r\n    // Here need to fix this shit\r\n    componentDidUpdate(prevProps, prevState) {\r\n        \r\n        \r\n        \r\n        \r\n       // generating website with updated data, choosed by user\r\n        if(  \r\n        ( (prevProps.today !== this.props.today) && (this.state.actualWebsite === \"temperature\")) \r\n        || \r\n        ( (this.state.actualWebsite=== \"temperature\")  && (prevState.setDay !== this.state.setDay) ) \r\n        || \r\n        ((this.state.actualWebsite=== \"temperature\") && (prevProps.temperature !== this.props.temperature)) \r\n        || ((prevState.actualWebsite !== this.state.actualWebsite) && (this.state.actualWebsite=== \"temperature\") ) \r\n         \r\n        \r\n        ){\r\n            \r\n            \r\n            this.setState({generated: <Temperature temperature={this.props.today} day={this.state.setDay} tempValue={this.props.temperature}/>,\r\n            today: this.props.today\r\n            })\r\n        }\r\n        // if there were changes in props of wind and state of  actualwebsite is equal to \"wind\" or there was change of day render again wind component with correct day\r\n        if( ( (prevProps.windValue !== this.props.windValue)   &&(this.state.actualWebsite === \"wind\") ) || ((prevProps.today !== this.props.today)  &&(this.state.actualWebsite === \"wind\")) || ((this.state.actualWebsite === \"wind\") && (prevState.setDay !== this.state.setDay) ) ) {\r\n            \r\n            this.setState({generated: <Wind temperature={this.props.today} day={this.state.setDay} windValue={this.props.windValue}/>,\r\n            today: this.props.today\r\n        })\r\n        }\r\n\r\n        if (   ( (this.state.actualWebsite === \"rain\")  && (prevState.setDay !== this.state.setDay) ) ||  ((prevProps.today !== this.props.today) && (this.state.actualWebsite === \"rain\") )   ) {\r\n            this.setState({generated: <Rain temperature={this.props.today} day={this.state.setDay} />,\r\n            today: this.props.today\r\n            })\r\n\r\n        }\r\n\r\n\r\n        if(  (( prevProps.temperature !== this.props.temperature  ) || (prevProps.today !== this.props.today)) || (this.state.setDay !== prevState.setDay)      ) {\r\n            \r\n            \r\n            \r\n           \r\n           this.setState({\r\n            day: this.props.today.forecast.forecastday.map( (item,index) => <Day item={item} tempValue={this.props.temperature} key={item[index]}  lol={index} settingDay={this.settingDay}  /> )\r\n           })\r\n            \r\n\r\n           \r\n        }\r\n\r\n        if(prevProps.setDay !== this.props.setDay) {\r\n            \r\n            if(this.state.setDay === 0) {\r\n                let date = new Date();\r\n                let first = date.getHours(); // first day\r\n                console.log(first)\r\n                this.setState({actualHour: first})\r\n            } else if(this.state.setDay) {\r\n                this.setState({actualHour: 14 })\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        \r\n\r\n        // Some of explanation\r\n        // actualHour is for taking from object actual hour, for example its 11A.M and we set state.actualHour of 11 and taking data from object .hour[11].data\r\n        \r\n\r\n        \r\n        \r\n\r\n        //console.error(\"MAPed List\")\r\n        //console.log(mappedList)\r\n\r\n       \r\n\r\n         let temp = \"\";\r\n         let Feelslike = \"\";\r\n         let per = \"\";\r\n         let tempToday = ''\r\n\r\n\r\n         setTimeout( () => {\r\n            let grabBody = document.querySelector('body')\r\n            if(grabBody.classList.contains(\"sunny\") && this.props.backgroundStyle !== \"sunny\") {\r\n                grabBody.classList.remove(\"sunny\")  \r\n            } else if (grabBody.classList.contains(\"cloud\") && this.props.backgroundStyle !== \"cloud\") {\r\n                grabBody.classList.remove(\"cloud\")\r\n            } else if (grabBody.classList.contains(\"rain\") && this.props.backgroundStyle !== \"rain\") {\r\n                grabBody.classList.remove(\"rain\")\r\n            } else if (grabBody.classList.contains(\"snow\") && this.props.backgroundStyle !== \"snow\") {\r\n                grabBody.classList.remove(\"snow\")\r\n            }\r\n\r\n            grabBody.classList.add(this.props.backgroundStyle)\r\n           \r\n        },300)\r\n         \r\n       \r\n        let grabBox = document.querySelector(\".box\")\r\n        let grabBody = document.querySelector(\"body\")\r\n        let grabh1 = document.querySelector('.h1class')\r\n        let grabInput = document.querySelector(\"#city\")\r\n        let grabSearchButton = document.querySelector(\"#searchButton\")\r\n        \r\n        \r\n\r\n        // setting on nightmode   \r\n       if(this.props.nightmode === \"on\" && !this.state.classNightmode) {\r\n\r\n                if(grabBox) {\r\n                    \r\n                    grabBox.classList.add(\"nightBox\")\r\n                    grabh1.style.textShadow = \"1px 1px 1px black\"\r\n                    grabh1.style.color = \"rgba(230, 220, 220, 0.8)\"\r\n\r\n                    grabBody.classList.add(\"nightmode\")\r\n                    grabInput.classList.add('.nightcity')\r\n                    grabSearchButton.style.backgroundColor = \"rgb(70, 66, 66)\"\r\n                    grabSearchButton.style.color = \"white\"\r\n                    grabInput.style.border = \"1px solid black\"\r\n                   \r\n                  this.setState({classNightmode: true})\r\n                }\r\n\r\n       } \r\n       \r\n       //setting off nightmode\r\n       else if ( this.props.nightmode === \"off\" && this.state.classNightmode){\r\n           \r\n           \r\n\r\n            grabBox.classList.remove(\"nightBox\")\r\n            grabh1.classList.remove(\"nighth1\")\r\n            grabh1.style.color = \"rgb(87, 178, 190)\"\r\n            grabBody.classList.remove(\"nightmode\")\r\n            grabInput.classList.remove('.nightcity')\r\n            grabSearchButton.style.backgroundColor = \"rgb(144, 218, 236)\"\r\n            grabSearchButton.style.color = \"white\"\r\n            grabInput.style.border = \"2px solid rgb(113, 216, 241)\"\r\n    \r\n            this.setState({classNightmode: false})\r\n       }\r\n         \r\n\r\n        if(this.props.temperature === \"celsjusz\") {\r\n            temp=\"℃\";\r\n            Feelslike= \"Feelslike Temp: \"+ this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].feelslike_c + temp\r\n\r\n            tempToday = this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].temp_c + temp\r\n        } \r\n        else {\r\n\r\n            temp=\"℉\"\r\n            Feelslike=\"Feelslike Temp: \"+ this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].feelslike_f + temp\r\n\r\n            tempToday = this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].temp_f + temp\r\n        }\r\n\r\n\r\n        if(this.props.windValue === \"km\") {\r\n            per = \"Wind: \"+ this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].wind_kph+ \" kp/h\";\r\n        } \r\n        else {\r\n            per=\"Wind: \"+ this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].wind_mph+ \" mp/h\";\r\n        }\r\n\r\n\r\n        // setting name of Day\r\n        let date = new Date();\r\n        let first = date.getDate(); \r\n    \r\n        let day1 = new Date(date.setDate(first)).toUTCString();\r\n\r\n    \r\n        day1 = day1.slice(0,3)\r\n        if(!this.state.actualDay) {\r\n            this.setState({actualDay: day1})\r\n        }\r\n        \r\n        \r\n        return (\r\n            <section className=\"box\"  >\r\n\r\n                <div className=\"todaySection\" onClick={this.cos}>\r\n\r\n                    <div className=\"today\">\r\n                        <div> {this.state.actualDay} </div>\r\n                        <img src={this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].condition.icon} alt=\"\" />\r\n                        <div> {tempToday} </div>\r\n\r\n                    </div>\r\n\r\n                    <ul>\r\n                        <li>{this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].condition.text}</li>\r\n                        <li> {per}</li>\r\n                        <li>{Feelslike} </li>\r\n                        <li>Humidity: {this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].humidity} %</li>\r\n                    </ul>\r\n\r\n                    <div className=\"cityDisplayed\">{this.props.location}</div>\r\n\r\n                    <div className=\"buttons\">\r\n                        <button className=\"settings\" onClick={() => this.props.openSettings()} > <AiOutlineSetting/> \r\n                        </button>\r\n\r\n                        <button className=\"refresh\" onClick={() => this.state.searchCity(this.props.city)}> <AiOutlineReload/>\r\n                        </button>\r\n                        <p>Last update: {this.state.today.forecast.forecastday[this.state.setDay].hour[this.state.actualHour].time}</p>\r\n                    </div>\r\n\r\n                    \r\n\r\n                </div>\r\n\r\n                <div className=\"chooseCategories\">\r\n\r\n                    <button onClick={ () => {\r\n                        this.setState({generated: <Temperature temperature={this.state.today} day={this.state.setDay} tempValue={this.state.tempValue} key={0} />,\r\n                        actualWebsite: \"temperature\"\r\n                        })\r\n                    }}>Temperature</button>\r\n\r\n                    <button onClick={ () => {\r\n                        this.setState({generated: <Wind temperature={this.state.today} day={this.state.setDay} windValue={this.props.windValue} key={1} />,\r\n                        actualWebsite: \"wind\"\r\n                        })\r\n                    }}>Wind</button>\r\n\r\n                    <button onClick={ () => {\r\n                        this.setState({generated: <Rain temperature={this.state.today} day={this.state.setDay} key={2}  />,\r\n                        actualWebsite: \"rain\"\r\n                        })\r\n                    }}>Rain</button>\r\n\r\n                </div>\r\n\r\n                <div className=\"categories\">\r\n                    {this.state.generated}\r\n                </div>\r\n   \r\n\r\n                <div className=\"days\"> \r\n                    {this.state.day}\r\n                </div>\r\n               \r\n            </section>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Box","import './App.css';\nimport React from \"react\"\nimport Box from \"./scripts/box\"\nimport $ from \"jquery\"\n\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      fetchedData: '',\n      generatedWebsite: '',\n      alert: '',\n      city: '',\n      settings: false,\n      windValue: \"km\",\n      temperature: \"celsjusz\",\n      nightmode: \"off\",\n    }\n    this.searchCity = this.searchCity.bind(this)\n    this.openSettings = this.openSettings.bind(this)\n  }\n \n\n  \n\n  componentDidUpdate(prevState,prevProps) {\n    if(prevState.temperature !== this.state.temperature) {\n      this.render()\n    }\n    if(prevState.windValue !== this.state.windValue) {\n      this.render()\n    } \n    if(prevState.nighmode !== this.state.nightmode) {\n      this.render()\n    }\n  }\n\n  alert(bool) {\n\n    let alertDiv =''\n\n    if(bool) {\n      alertDiv = <div className=\"alert\">There is no city named that in our base</div>\n    }\n    else {\n      alertDiv = ''\n    }\n      \n     \n\n\n  \n\n    this.setState({alert: alertDiv})\n\n\n  }\n\n  searchCity(param) {\n\n    let grabValue = document.querySelector(\"#city\").value;\n    this.setState({city: grabValue})\n    let grabField = document.querySelector('#city')\n    grabField.focus()\n    grabField.select()\n\n    if(param) {\n      grabValue = param;\n    }\n    grabValue = grabValue.toLowerCase()\n\n\n    fetch('http://api.weatherapi.com/v1/forecast.json?key=60264f8c99b942ea8d5111232211708&q='+grabValue+'&days=3&aqi=no&alerts=no', {\n        \n     \n    })\n    .then(res => {\n      if(res) {\n        res = res.json()\n        return res\n      } \n      else {\n        throw new Error(\"Something went wrong\");\n      }\n      \n    }) \n    .then(data => { \n      \n      if(data.hasOwnProperty(\"error\")) {\n        this.alert(true)\n      } else {\n        this.setState({fetchedData: data})\n        this.alert(false)\n      }\n\n      \n     \n    })\n    .catch((error) => {\n      console.log(error)\n    })\n\n\n  }\n\n  toggler(param) {\n    \n\n    if(param === (\"celsjusz\" || \"fahrenheit\") ) {\n      \n      if(this.state.temperature === \"celsjusz\") {\n        this.setState({temperature: \"fahrenheit\"})\n        \n        \n      } else if(this.state.temperature === \"fahrenheit\"){\n        this.setState({temperature: \"celsjusz\"})\n      }\n\n    }\n    else if (param === \"night\") {\n\n      if(this.state.nightmode ===\"on\") {\n        this.setState({nightmode: \"off\"})\n      }\n      else if (this.state.nightmode === \"off\") {\n        this.setState({nightmode: \"on\"})\n      }\n    }\n\n    else {\n\n      if(this.state.windValue === \"km\") {\n        this.setState({windValue: \"mi\"})\n      } else if (this.state.windValue === \"mi\") {\n        this.setState({windValue: \"km\"})\n      }\n\n    }\n\n  \n\n  }\n\n  openSettings() {\n    this.setState(prevState => ({\n      settings: !prevState.settings\n    }) )\n  }\n\n\n    render() {\n\n      let settings = ''\n    \n      if(this.state.settings) {\n        settings = \n        <div className=\"boxSettings\">\n          <div className=\"Settings\">\n            <button className=\"exit\" onClick={ () => this.openSettings()}>X</button>\n            <ul>\n              <li> \n                \n                  <p className=\"kilo\">Kilometrs per hour </p>\n                  \n                  <p className=\"mile\">Miles per hour</p> \n  \n                    <label className =\"switch\">\n                      \n                      <input className=\"windCheck\" type=\"checkbox\" onClick={() => this.toggler(\"wind\")} />\n                      <span className=\"slider\"></span>\n\n                    </label>\n\n              </li>\n\n              <li>\n                  <p className=\"cels\">Celsius ℃ </p>\n                  \n                  <p className=\"fahr\"> Fahrenheit ℉</p> \n\n\n                    \n                    <label className =\"switch\">\n\n                      <input className=\"TempCheck\"  type=\"checkbox\" onClick={() => this.toggler(\"celsjusz\")}/>\n                      <span className=\"slider\"></span>\n\n                    </label> \n              </li>\n\n\n              <li> \n                \n                  <p className=\"nightOff\">Night mode off </p>\n                  \n                  <p className=\"nightOn\">Night mode on</p> \n  \n                    <label className =\"switch\">\n                      \n                      <input className=\"nightmod\" type=\"checkbox\" onClick={() => this.toggler(\"night\")} />\n                      <span className=\"slider\"></span>\n\n                    </label>\n\n              </li>\n\n            </ul>\n          </div>\n\n      </div>\n      }\n      \n\n    \n\n\n      if(this.state.settings) {\n        \n\n        let colorWind = document.querySelector('.kilo');\n        let colorWind2 = document.querySelector('.mile')\n\n        let colorTemp = document.querySelector('.cels');\n        let colorTemp2 = document.querySelector('.fahr');\n\n        let nightOff = document.querySelector('.nightOff')\n        let nightOn = document.querySelector('.nightOn')\n\n\n        if(colorWind, colorWind2, colorTemp, colorTemp2, nightOff, nightOn) {\n\n\n        // Night mode\n          if(this.state.nightmode === \"on\") {\n            nightOn.style.color = \"#87CEEB\"\n            nightOn.style.textShadow = \"0.5px 0.5px 0.5px black\"\n            nightOff.style.color = \"gray\"\n          } else if (this.state.nightmode === \"off\") {\n            nightOff.style.color = \"#87CEEB\"\n            nightOff.style.textShadow = \"0.5px 0.5px 0.5px black\"\n            nightOn.style.color = \"gray\"\n          }\n        \n  \n          if(this.state.windValue === \"km\") {\n            colorWind.style.color = \"#87CEEB\"\n            colorWind.style.textShadow = \"0.5px 0.5px 0.5px black\"\n            colorWind2.style.color = \"gray\"\n          } else if (this.state.windValue === \"mi\") {\n            document.querySelector('.windCheck').checked = true\n            colorWind2.style.color = \"#87CEEB\"\n            colorWind2.style.textShadow = \"0.5px 0.5px 0.5px black\"\n            colorWind.style.color = \"gray\"\n          }\n  \n          if(this.state.temperature === \"celsjusz\") {\n            colorTemp.style.color = \"#87CEEB\"\n            colorTemp.style.textShadow = \"0.5px 0.5px 0.5px black\"\n            colorTemp2.style.color = \"gray\"\n          } else if (this.state.temperature === \"fahrenheit\") {\n            // setting colors and checked\n            document.querySelector('.TempCheck').checked = true\n            colorTemp2.style.color = \"#87CEEB\"\n            colorTemp2.style.textShadow = \"0.5px 0.5px 0.5px black\"\n            colorTemp.style.color = \"gray\"\n          }\n\n        }\n\n       \n      \n\n      }\n\n      \n\n      let showIcon = ''\n\n     \n\n      if(this.state.fetchedData && !this.state.fetchedData.error) {\n\n          let backgroundStyle= ''\n          let shortCutW = this.state.fetchedData.current.condition.text;\n          \n          \n          if(shortCutW === (\"Partly cloudy\" || \"Overcast\" || \"Cloudy\" ) ) {\n            backgroundStyle= \"cloud\"\n          }\n          else if(shortCutW === (\"Patchy rain possible\" || \"Light rain shower\" || \"Moderate or heavy rain shower\" || \"Moderate rain\")  ) {\n            backgroundStyle= \"rain\"\n          }\n          else if(shortCutW === (\"Thundery outbreaks possible\" || \"Patchy light rain with thunder\" ) ) {\n            backgroundStyle= \"storm\"\n          }\n          else if(shortCutW === \"Sunny\") {\n            backgroundStyle= \"sunny\"\n          }\n          else if (shortCutW === (\"Light snow\" || \"snow\")) {\n            backgroundStyle = \"snow\"\n          }\n          else {\n            backgroundStyle= \"cloud\"\n          }\n         \n          \n          \n\n          showIcon = <Box \n          today={this.state.fetchedData} \n          backgroundStyle={backgroundStyle} \n          location={this.state.fetchedData.location.name} \n          city={this.state.city} \n          searchCity={this.searchCity}  \n          openSettings={this.openSettings}\n          temperature={this.state.temperature}\n          windValue={this.state.windValue}\n          nightmode={this.state.nightmode}\n          setDay={0}\n          />\n\n          if(!this.state.settings) {\n            settings = ''\n          }\n\n\n      } \n      else {\n        showIcon= ''\n      }\n      \n\n      // enter to submit\n      let handleKeyPress = '';\n      handleKeyPress = (event) => {\n          if(event.key === \"Enter\") {\n            let grabValue = document.querySelector('#city').value\n            this.searchCity(grabValue)\n          }\n      }\n\n      return (\n        <div className=\"App\">\n\n            <header>\n\n                <h1 className=\"h1class\">Enter a city Name and Search for actual Weather</h1>\n              \n            \n\n                <input name=\"city\" id=\"city\" type=\"text\" placeholder=\" Just type\" onKeyPress= { (e) => handleKeyPress(e)} />\n\n                {this.state.alert}\n\n                <input type=\"button\" id=\"searchButton\" onClick={ () =>this.searchCity()} value=\"Search\"  />\n                \n\n            </header>\n\n            \n            \n            {showIcon}\n            {settings}\n                \n            \n\n\n        </div>\n      )\n\n    }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}